name: CI

on:
  push:

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm run lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm run check

  test:
    name: Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-noble
      options: --user 1001
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm run test:unit --run
      - run: pnpm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  container:
    name: Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: docker build -t blocks:test .

      - name: run and check
        run: |
          docker run -d --name blocks -p 3000:3000 blocks:test

          # Wait for container to be ready (up to 30 seconds)
          echo "Waiting for container to start..."
          for i in {1..30}; do
            if curl -f -s http://localhost:3000 > /dev/null 2>&1; then
              echo "Container is ready!"
              break
            fi
            echo "Attempt $i/30: Container not ready yet, waiting..."
            sleep 1
          done

      - name: health check
        run: |
          echo "Checking health..."
          RESP="$(curl -Ss http://localhost:3000/health)"
          if test "$RESP" != "OK"; then
            printf "Health check failed! Here's what we got:\n\n%s\n\n" "$RESP"
            exit 1
          fi
          echo "Health check passed!"

      - name: stop container
        if: always()
        run: |
          echo "Stopping Docker container..."
          docker stop blocks || true
          docker rm blocks || true
